{
    "openapi": "3.0.0",
    "info": {
        "title": "User API",
        "version": "1.0.0",
        "description": "API for managing users in FastMusik"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Local server"
        },
        {
            "url": "https://users-fastmusik-marmolpen3.cloud.okteto.net/",
            "description": "Production server"
        }
    ],
    "paths": {
        "/api/{version}/users": {
            "get": {
                "summary": "Retrieve all users",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/{version}/users/{userId}": {
            "get": {
                "summary": "Retrieve a single user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "summary": "Update an existing user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete an existing user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/{version}/users/login": {
            "post": {
              "summary": "Log in a user",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "email",
                        "password"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "The email address of the user"
                        },
                        "password": {
                          "type": "string",
                          "description": "The password of the user"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Success",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                },
                "400": {
                  "description": "Invalid email or password"
                }
              }
            }
          }  
    },
    "components": {
        "schemas": {
          "User": {
            "type": "object",
            "required": [
              "username",
              "email",
              "password",
              "role",
              "plan"
            ],
            "properties": {
              "username": {
                "type": "string",
                "description": "The username of the user"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "The email address of the user"
              },
              "password": {
                "type": "string",
                "description": "The password of the user"
              },
              "role": {
                "type": "string",
                "description": "The role of the user",
                "enum": [
                  "user",
                  "admin"
                ]
              },
              "plan": {
                "type": "string",
                "description": "The subscription plan of the user",
                "enum": [
                  "free",
                  "premium"
                ]
              },
              "insert": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the user was created"
              }
            }
          }
        }
      }    
}